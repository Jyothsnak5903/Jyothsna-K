HTML / CSS Fundamentals:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HTML CSS Fundamentals</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        h1 {
            color: blue;
        }
    </style>
</head>
<body>
    <h1>Hello, World!</h1>
    <p>This is an example of HTML and CSS fundamentals.</p>
</body>
</html>
----------------------------------------------------------------------JavaScript Essentials:
// Variables and Data Types
let name = "Alice";
const age = 30;
console.log(`My name is ${name} and I am ${age} years old.`);

// Functions
function greet(name) {
    return `Hello, ${name}!`;
}
console.log(greet("Bob"));

// Arrays and Objects
let numbers = [1, 2, 3, 4, 5];
let person = {
    name: "Alice",
    age: 30
};

// Conditional Statements
if (age > 18) {
    console.log("You are an adult.");
} else {
    console.log("You are a minor.");
}
---------------------------------------------------------------------
React Fundamentals:
import React from 'react';

function App() {
    return (
        <div>
            <h1>Hello, React!</h1>
            <p>This is a React component.</p>
        </div>
    );
}

export default App;
-----------------------------------------------------------------
Tailwind CSS Fundamentals:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tailwind CSS Fundamentals</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body>
    <div class="bg-blue-500 text-white p-4">
        <h1 class="text-3xl">Hello, Tailwind CSS!</h1>
        <p class="text-lg">This is a Tailwind CSS example.</p>
    </div>
</body>
</html>
------------------------------------------------------------------
React Query for network requests:
import React from 'react';
import { useQuery } from 'react-query';

function App() {
    const { isLoading, error, data } = useQuery('todos', async () => {
        const response = await fetch('https://jsonplaceholder.typicode.com/todos');
        return response.json();
    });

    if (isLoading) return <div>Loading...</div>;
    if (error) return <div>Error: {error.message}</div>;

    return (
        <div>
            <h1>Todos</h1>
            <ul>
                {data.map(todo => (
                    <li key={todo.id}>{todo.title}</li>
                ))}
            </ul>
        </div>
    );
}

export default App;
----------------------------------------------------------------
CI/CD and GitHub Actions:
name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
----------------------------------------------------------------
Linux CLI - Learn the basics of bash:
#!/bin/bash

# Variables and Echo
name="Alice"
echo "Hello, $name!"

# Conditional Statements
if [ "$name" == "Alice" ]; then
    echo "You are Alice."
else
    echo "You are not Alice."
fi

# Loops
for i in {1..5}; do
    echo "Count: $i"
done
----------------------------------------------------------------
Learn Node.js 17 From Scratch:
const http = require('http');

const server = http.createServer((req, res) => {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Hello, Node.js!');
});

server.listen(3000, 'localhost', () => {
    console.log('Server running at http://localhost:3000/');
});
---------------------------------------------------------------
Learn Next.js 11 - Build Modern Next.js Applications:
import Head from 'next/head';

export default function Home() {
    return (
        <div>
            <Head>
                <title>Next.js App</title>
                <meta name="description" content="Next.js application" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <h1>Hello, Next.js!</h1>
                <p>This is a Next.js application.</p>
            </main>
        </div>
    );
}
-----------------------------------------------------------
Advanced Next.js Concepts:
import { useState } from 'react';

export default function Counter() {
    const [count, setCount] = useState(0);

    const increment = () => setCount(count + 1);
    const decrement = () => setCount(count - 1);

    return (
        <div>
            <h1>Counter: {count}</h1>
            <button onClick={increment}>Increment</button>
            <button onClick={decrement}>Decrement</button>
        </div>
    );
}
-----------------------------------------------------------
Redis Caching Concepts with Node.js:
const redis = require('redis');
const client = redis.createClient();

client.on('error', (err) => {
    console.log(`Error: ${err}`);
});

// Set data with expiration (10 seconds)
client.setex('key', 10, 'value');

// Get data
client.get('key', (err, reply) => {
    console.log(reply);
});
------------------------------------------------------